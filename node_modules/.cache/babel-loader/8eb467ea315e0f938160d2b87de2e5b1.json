{"ast":null,"code":"var _jsxFileName = \"/Users/aayush.ghimire/Documents/covid/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData((await fetchDailyData())); //const dailyData = await fetchDate();\n      //setDailyData(dailyData);\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  });\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datsets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/aayush.ghimire/Documents/covid/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchAPI","console","log","lineChart","labels","map","date","datsets","data","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,cAAR,QAA8B,WAA9B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAGA,MAAMC,KAAK,GAAG,MAAK;AACf,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAE,MAAI;AACX,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,EAAC,MAAMN,cAAc,EAArB,EAAZ,CADyB,CAEzB;AACA;AACH,KAJD;;AAKAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAE,IAAAA,QAAQ;AACX,GARQ,CAAT;AAUA,QAAMG,SAAS,GAEXL,SAAS,CAAC,CAAD,CAAT,gBAEA,oBAAC,IAAD;AACA,IAAA,IAAI,EAAK;AACLM,MAAAA,MAAM,EAAEN,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAYA,IAA1B,CADH;AAELC,MAAAA,OAAO,EAAE,CAAE;AACPC,QAAAA,IAAI,EAACV,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEI,UAAAA;AAAF,SAAD,KAAiBA,SAA/B,CADE;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAC;AAJE,OAAF,EAKN;AACCJ,QAAAA,IAAI,EAACV,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAcA,MAA5B,CADN;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,mBAJlB;AAKCF,QAAAA,IAAI,EAAC;AALN,OALM;AAFJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAmBG,IArBP;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAGhB,MAAM,CAACmB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,SADL,CADJ;AAKH,CA1CD;;AA4CA,eAAeN,KAAf","sourcesContent":["\nimport React, {useState, useEffect } from 'react';\nimport {fetchDailyData } from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\n\nconst Chart = () =>{\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect( ()=>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n            //const dailyData = await fetchDate();\n            //setDailyData(dailyData);\n        }\n        console.log(dailyData);\n        fetchAPI();\n    } );\n\n    const lineChart = (\n        \n        dailyData[0] \n        ? (\n        <Line \n        data = { {\n            labels: dailyData.map(({ date })=>date),\n            datsets: [ {\n                data:dailyData.map(({ confirmed })=>confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill:true,\n            }, {\n                data:dailyData.map(({ deaths })=>deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255,0,0,0.5)',\n                fill:true,\n            }, ],\n\n        } \n    }/>) : null\n    );\n\n    return (\n        <div className ={styles.container}>\n            {lineChart}\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}